<Project Sdk="Microsoft.NET.Sdk">
  <Import Project="..\LLama\LLamaSharp.Runtime.targets" />
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <RootNamespace>LLama.Unittest</RootNamespace>
    <ImplicitUsings>enable</ImplicitUsings>
    <Platforms>AnyCPU;x64</Platforms>
    <Nullable>enable</Nullable>

    <IsPackable>false</IsPackable>

    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.13.0" />
    <PackageReference Include="Moq" Version="4.20.72" />
    <PackageReference Include="System.Linq.Async" Version="6.0.1" />
    <PackageReference Include="xunit" Version="2.9.3" />
    <PackageReference Include="xunit.runner.visualstudio" Version="3.0.2">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="coverlet.collector" Version="6.0.4">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Xunit.SkippableFact" Version="1.5.23" />
  </ItemGroup>

    <!-- Define each file to download.
       The Include value is just an identifier.
       SourceUrl is the remote URL.
       DestinationFolder is where you want it saved.
       LocalFileName is the desired file name. -->
    <ItemGroup>
        <DownloadFileItem Include="Llama-3.2-1B-Instruct-Q4_0">
            <SourceUrl>https://huggingface.co/bartowski/Llama-3.2-1B-Instruct-GGUF/resolve/main/Llama-3.2-1B-Instruct-Q4_0.gguf</SourceUrl>
            <DestinationFolder>Models</DestinationFolder>
            <LocalFileName>Llama-3.2-1B-Instruct-Q4_0.gguf</LocalFileName>
        </DownloadFileItem>

        <DownloadFileItem Include="smollm-360m-instruct-add-basics-q8_0">
            <SourceUrl>https://huggingface.co/HuggingFaceTB/smollm-360M-instruct-v0.2-Q8_0-GGUF/resolve/main/smollm-360m-instruct-add-basics-q8_0.gguf</SourceUrl>
            <DestinationFolder>Models</DestinationFolder>
            <LocalFileName>smollm-360m-instruct-add-basics-q8_0.gguf</LocalFileName>
        </DownloadFileItem>

        <DownloadFileItem Include="llava-v1.6-mistral-7b">
            <SourceUrl>https://huggingface.co/cjpais/llava-1.6-mistral-7b-gguf/resolve/main/llava-v1.6-mistral-7b.Q3_K_XS.gguf</SourceUrl>
            <DestinationFolder>Models</DestinationFolder>
            <LocalFileName>llava-v1.6-mistral-7b.Q3_K_XS.gguf</LocalFileName>
        </DownloadFileItem>

        <DownloadFileItem Include="mmproj-model-f16">
            <SourceUrl>https://huggingface.co/cjpais/llava-1.6-mistral-7b-gguf/resolve/main/mmproj-model-f16.gguf</SourceUrl>
            <DestinationFolder>Models</DestinationFolder>
            <LocalFileName>mmproj-model-f16.gguf</LocalFileName>
        </DownloadFileItem>

        <DownloadFileItem Include="all-MiniLM-L12-v2">
            <SourceUrl>https://huggingface.co/leliuga/all-MiniLM-L12-v2-GGUF/resolve/main/all-MiniLM-L12-v2.Q8_0.gguf</SourceUrl>
            <DestinationFolder>Models</DestinationFolder>
            <LocalFileName>all-MiniLM-L12-v2.Q8_0.gguf</LocalFileName>
        </DownloadFileItem>
    </ItemGroup>

    <!-- Ensure the destination folder exists -->
    <Target Name="EnsureFolders">
        <MakeDir Directories="Models" Condition="!Exists('Models')" />
    </Target>

    <!-- Download a single file:
       - Computes the full target file name (DesiredFile).
       - If DesiredFile already exists, the download is skipped.
       - Otherwise, creates a temporary folder (TempDownload), 
         downloads the file there using DownloadFile, and then moves it
         to DesiredFile. Finally, cleans up the temporary folder.  -->
    <Target Name="DownloadSingleFile" DependsOnTargets="EnsureFolders">
        <!-- (These properties come in via the MSBuild call.) -->
        <PropertyGroup>
            <DesiredFile>$([System.IO.Path]::Combine($(DestinationFolder), $(LocalFileName)))</DesiredFile>
        </PropertyGroup>

        <Message Text="Processing file: $(DesiredFile)" Importance="high" />

        <!-- Define a flag based on whether the file already exists -->
        <PropertyGroup>
            <DownloadNeeded Condition="!Exists('$(DesiredFile)')">true</DownloadNeeded>
            <DownloadNeeded Condition="Exists('$(DesiredFile)')">false</DownloadNeeded>
        </PropertyGroup>
        <Message Text="Download needed: $(DownloadNeeded)" Importance="high" />

        <!-- If the file is already present, skip the download (by simply exiting this target) -->
        <Message Text="File $(DesiredFile) already exists; skipping download." Importance="high" Condition=" '$(DownloadNeeded)'=='false' " />

        <!-- Only download if required -->
        <DownloadFile SourceUrl="$(SourceUrl)" DestinationFolder="TempDownload" SkipUnchangedFiles="true" Condition=" '$(DownloadNeeded)'=='true' " />

        <!-- If a file was downloaded, move it to the desired name.
         We assume TempDownload now contains the downloaded file.
         (You might want to refine this if TempDownload could ever contain multiple files.) -->
        <ItemGroup Condition=" '$(DownloadNeeded)'=='true' ">
            <TempFile Include="TempDownload/*.*" />
        </ItemGroup>
        <Message Text="Downloaded file (temp): @(TempFile)" Importance="high" Condition=" '$(DownloadNeeded)'=='true' " />
        <Move SourceFiles="@(TempFile)" DestinationFiles="$(DesiredFile)" Condition=" '$(DownloadNeeded)'=='true' and @(TempFile) != '' " />
        <Message Text="Renamed downloaded file to $(DesiredFile)" Importance="high" Condition=" '$(DownloadNeeded)'=='true' and @(TempFile) != '' " />

        <!-- Remove the temporary download folder -->
        <RemoveDir Directories="TempDownload" Condition="Exists('TempDownload')" />
    </Target>

    <!-- Main target to process each file by calling the DownloadSingleFile target for each item.
       The MSBuild task will batch over the DownloadFileItem items, passing in each file’s metadata. -->
    <Target Name="DownloadAllFiles" BeforeTargets="DispatchToInnerBuilds;BeforeBuild">
        <MSBuild Projects="$(MSBuildProjectFile)" Targets="DownloadSingleFile" Properties="SourceUrl=%(DownloadFileItem.SourceUrl);DestinationFolder=%(DownloadFileItem.DestinationFolder);LocalFileName=%(DownloadFileItem.LocalFileName);TargetFramework=once" />
    </Target>

    <ItemGroup>
    <ProjectReference Include="..\LLama.KernelMemory\LLamaSharp.KernelMemory.csproj" />
    <ProjectReference Include="..\LLama.SemanticKernel\LLamaSharp.SemanticKernel.csproj" />
    <ProjectReference Include="..\LLama\LLamaSharp.csproj" />
  </ItemGroup>

  <ItemGroup>
    <None Update="Models\all-MiniLM-L12-v2.Q8_0.gguf">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Models\Llama-3.2-1B-Instruct-Q4_0.gguf">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Models\smollm-360m-instruct-add-basics-q8_0.gguf">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Models\llava-v1.6-mistral-7b.Q3_K_XS.gguf">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Models\mmproj-model-f16.gguf">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="Models\extreme-ironing-taxi-610x427.jpg">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>
</Project>
